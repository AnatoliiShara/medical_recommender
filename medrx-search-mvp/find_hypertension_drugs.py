import sys
import pandas as pd
sys.path.append('src')

print("=== –ü–û–®–£–ö –ü–†–ï–ü–ê–†–ê–¢–Ü–í –í–Ü–î –ì–Ü–ü–ï–†–¢–ï–ù–ó–Ü–á –í –ü–û–í–ù–û–ú–£ –î–ê–¢–ê–°–ï–¢–Ü ===")

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–æ–≤–Ω–∏–π –¥–∞—Ç–∞—Å–µ—Ç
df = pd.read_parquet("/home/anatolii-shara/Documents/scraping_compendium/compendium_all.parquet")
print(f"–ü–æ–≤–Ω–∏–π –¥–∞—Ç–∞—Å–µ—Ç: {len(df)} –ø—Ä–µ–ø–∞—Ä–∞—Ç—ñ–≤")

# –®—É–∫–∞—î–º–æ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∏ –∑ –≥—ñ–ø–µ—Ä—Ç–µ–Ω–∑—ñ—î—é
hypertension_terms = ['–≥—ñ–ø–µ—Ä—Ç–µ–Ω–∑—ñ', '–≥—ñ–ø–µ—Ä—Ç–æ–Ω—ñ—á–Ω', '–≤–∏—Å–æ–∫–∏–π —Ç–∏—Å–∫', '–ø—ñ–¥–≤–∏—â–µ–Ω–∏–π —Ç–∏—Å–∫', '–∞—Ä—Ç–µ—Ä—ñ–∞–ª—å–Ω–∏–π —Ç–∏—Å–∫']

found_drugs = []
for idx, row in df.iterrows():
    indications = str(row.get('–ü–æ–∫–∞–∑–∞–Ω–Ω—è', '')).lower()
    drug_name = str(row.get('–ù–∞–∑–≤–∞ –ø—Ä–µ–ø–∞—Ä–∞—Ç—É', ''))
    
    for term in hypertension_terms:
        if term in indications:
            found_drugs.append({
                'index': idx,
                'name': drug_name,
                'indications': row.get('–ü–æ–∫–∞–∑–∞–Ω–Ω—è', '')[:200] + '...'
            })
            break

print(f"\nüéØ –ó–ù–ê–ô–î–ï–ù–û {len(found_drugs)} –ø—Ä–µ–ø–∞—Ä–∞—Ç—ñ–≤ –≤—ñ–¥ –≥—ñ–ø–µ—Ä—Ç–µ–Ω–∑—ñ—ó:")

# –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 10 –∑–Ω–∞–π–¥–µ–Ω–∏—Ö
for i, drug in enumerate(found_drugs[:10]):
    print(f"{i+1}. {drug['name']} (—ñ–Ω–¥–µ–∫—Å {drug['index']})")
    print(f"   –ü–æ–∫–∞–∑–∞–Ω–Ω—è: {drug['indications']}")
    print()

if found_drugs:
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –¥–∞—Ç–∞—Å–µ—Ç –∑ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞–º–∏ –≤—ñ–¥ –≥—ñ–ø–µ—Ä—Ç–µ–Ω–∑—ñ—ó
    hypertension_indices = [drug['index'] for drug in found_drugs[:20]]
    test_df = df.iloc[hypertension_indices].copy()
    
    print(f"‚úÖ –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –¥–∞—Ç–∞—Å–µ—Ç –∑ {len(test_df)} –ø—Ä–µ–ø–∞—Ä–∞—Ç—ñ–≤ –≤—ñ–¥ –≥—ñ–ø–µ—Ä—Ç–µ–Ω–∑—ñ—ó")
    
    # –¢–µ—Å—Ç—É—î–º–æ enhanced assistant –Ω–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    from search.enhanced_medical_assistant import EnhancedMedicalAssistant, SearchConfig
    
    print("\n[–¢–ï–°–¢] Enhanced Medical Assistant –Ω–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∏—Ö –¥–∞–Ω–∏—Ö:")
    assistant = EnhancedMedicalAssistant()
    assistant.build_from_dataframe(test_df, encoder_model=None, medical_chunking=True, max_chunk_tokens=128)
    
    # –ü–æ—à—É–∫
    config = SearchConfig(show=5)
    results = assistant.search("–∞—Ä—Ç–µ—Ä—ñ–∞–ª—å–Ω–∞ –≥—ñ–ø–µ—Ä—Ç–µ–Ω–∑—ñ—è", config)
    
    print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É:")
    for i, drug in enumerate(results):
        print(f"{i+1}. {drug['drug_name']}")
        print(f"   Score: {drug['best_score']:.3f}")
        print(f"   Passages: {len(drug['passages'])}")

else:
    print("‚ùå –ü—Ä–µ–ø–∞—Ä–∞—Ç–∏ –≤—ñ–¥ –≥—ñ–ø–µ—Ä—Ç–µ–Ω–∑—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –¥–∞—Ç–∞—Å–µ—Ç—ñ!")

